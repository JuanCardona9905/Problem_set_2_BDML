Ln_P5130 = log(P5130), #Log de pago de estimativo de pago de arriendo
Ln_P5140 = log(P5140)) %>% #Log de pago arriendo
rename(Ing_tot_hog  = Ingtotugarr) %>%
select(-Ingtotug, # Ingreso antes de arriendo
-Ingpcug,
-Li,
-Indigente,
-Nindigentes,
-Npobres) # Ingreso percapita
colnames(train_hogares)
rm(list = ls())
train_personas <- read_csv("~/Problem_set_2/Data/train_personas.csv")
train_hogares <- read_csv("~/Problem_set_2/Data/train_hogares.csv")
test_personas <- read_csv("~/Problem_set_2/Data/test_personas.csv")
test_hogares <- read_csv("~/Problem_set_2/Data/test_hogares.csv")
train_hogares <- train_hogares %>%
mutate(
Cabecera = ifelse(Clase==1,1,0),
DormitorXpersona = P5010/Nper,
Ln_Cuota = log(P5100), #Log de pago de cuota
Ln_Est_arrien = log(P5130), #Log de pago de estimativo de pago de arriendo
Ln_Pago_arrien = log(P5140)) %>% #Log de pago arriendo
rename(Ing_tot_hog  = Ingtotugarr,
N_cuartos_hog =  P5000,
Ocup_vivienda = P5090) %>%
select(-Ingtotug, # Ingreso antes de arriendo
-Ingpcug,
-Li,
-Indigente,
-Nindigentes,
-Npobres,
-P5010,
-P5100,
-P5130,
-P5140)
colnames(train_hogares)
colnames(test_hogares)
test_hogares <- test_hogares %>%
mutate(
Cabecera = ifelse(Clase==1,1,0),
DormitorXpersona = P5010/Nper,
Ln_Cuota = log(P5100), #Log de pago de cuota
Ln_Est_arrien = log(P5130), #Log de pago de estimativo de pago de arriendo
Ln_Pago_arrien = log(P5140)) %>% #Log de pago arriendo
rename(N_cuartos_hog =  P5000,
Ocup_vivienda = P5090) %>%
select(-Li,
-P5010,
-P5100,
-P5130,
-P5140)
colnames(test_hogares)
train_personas <- train_personas %>%
mutate(
Mujer = ifelse(P6020==2,1,0),
H_Head = ifelse(P6050== 1, 1, 0),#Household head
Afiliado_SS = ifelse(P6090== 1, 1, 0), #Afiliado a seg social en salud
Reg_subs_salud = ifelse(P6100== 3, 1, 0), #Pertenece al regimen de salud subsidiado
Menor = ifelse(P6040<=6,1,0), # Menores
EducLevel = ifelse(P6210==9,0,P6210), #Replace 9 with 0
ocupado = ifelse(is.na(Oc),0,1),
exper_ult_trab = ifelse(is.na(P6426),0,P6426),
#Sueldo_tot = P6500+P6510s1+P7070,
Rec_alimento = ifelse(P6590==1,1,0), #Recibio alimentos como parte de pago del salario
Rec_vivienda = ifelse(P6600==1,1,0),
#Pago_negocio = P6750/P6760,
Cot_pension = ifelse(P6920==1|P6920==3,1,0),
Ing_extra = P7500s1a1+P7500s3a1+P7510s1a1+P7510s2a1+P7510s5a1,
Rec_subsidio = ifelse(P7510s3==1,1,0),
Ln_Ingtot = log(Ingtot),
Ln_Ingtotob = log(Ingtotob),
Ln_Ing_extra = log(Ing_extra))
colnames(train_personas)
train_personas <- train_personas %>%
rename(
Edad = P6040,
Ocupacion = P6430,
Nivel_formalidad = P6870)
train_personas <- train_personas %>%
select(
id,
Orden,
Clase,
Dominio,
Estrato1,
Edad,
Mujer,
H_Head,#Household head
Afiliado_SS, #Afiliado a seg social en salud
Reg_subs_salud, #Pertenece al regimen de salud subsidiado
Menor, # Menores
Oficio,
Ocupacion,
Nivel_formalidad,
EducLevel = ifelse(P6210==9,0,P6210), #Replace 9 with 0
ocupado,
exper_ult_trab,
Rec_alimento, #Recibio alimentos como parte de pago del salario
Rec_vivienda,
Cot_pension,
Ing_extra,
Rec_subsidio,
Pet,
Ln_Ingtot,
Ln_Ingtotob,
Ln_Ing_extra,
Fex_c,
Depto,
Fex_dpto)
train_personas <- train_personas %>%
select(
id,
Orden,
Clase,
Dominio,
Estrato1,
Edad,
Mujer,
H_Head,#Household head
Afiliado_SS, #Afiliado a seg social en salud
Reg_subs_salud, #Pertenece al regimen de salud subsidiado
Menor, # Menores
Oficio,
Ocupacion,
Nivel_formalidad,
EducLevel, #Replace 9 with 0
ocupado,
exper_ult_trab,
Rec_alimento, #Recibio alimentos como parte de pago del salario
Rec_vivienda,
Cot_pension,
Ing_extra,
Rec_subsidio,
Pet,
Ln_Ingtot,
Ln_Ingtotob,
Ln_Ing_extra,
Fex_c,
Depto,
Fex_dpto)
colnames(train_personas)
colnames(test_personas)
test_personas <- test_personas %>%
mutate(
Mujer = ifelse(P6020==2,1,0),
H_Head = ifelse(P6050== 1, 1, 0),#Household head
Afiliado_SS = ifelse(P6090== 1, 1, 0), #Afiliado a seg social en salud
Reg_subs_salud = ifelse(P6100== 3, 1, 0), #Pertenece al regimen de salud subsidiado
Menor = ifelse(P6040<=6,1,0), # Menores
EducLevel = ifelse(P6210==9,0,P6210), #Replace 9 with 0
ocupado = ifelse(is.na(Oc),0,1),
exper_ult_trab = ifelse(is.na(P6426),0,P6426),
#Sueldo_tot = P6500+P6510s1+P7070,
Rec_alimento = ifelse(P6590==1,1,0), #Recibio alimentos como parte de pago del salario
Rec_vivienda = ifelse(P6600==1,1,0),
#Pago_negocio = P6750/P6760,
Cot_pension = ifelse(P6920==1|P6920==3,1,0),
Ing_extra = P7500s1a1+P7500s3a1+P7510s1a1+P7510s2a1+P7510s5a1,
Rec_subsidio = ifelse(P7510s3==1,1,0),
Ln_Ingtot = log(Ingtot),
Ln_Ingtotob = log(Ingtotob),
Ln_Ing_extra = log(Ing_extra))
test_personas <- test_personas %>%
mutate(
Mujer = ifelse(P6020==2,1,0),
H_Head = ifelse(P6050== 1, 1, 0),#Household head
Afiliado_SS = ifelse(P6090== 1, 1, 0), #Afiliado a seg social en salud
Reg_subs_salud = ifelse(P6100== 3, 1, 0), #Pertenece al regimen de salud subsidiado
Menor = ifelse(P6040<=6,1,0), # Menores
EducLevel = ifelse(P6210==9,0,P6210), #Replace 9 with 0
ocupado = ifelse(is.na(Oc),0,1),
exper_ult_trab = ifelse(is.na(P6426),0,P6426),
#Sueldo_tot = P6500+P6510s1+P7070,
Rec_alimento = ifelse(P6590==1,1,0), #Recibio alimentos como parte de pago del salario
Rec_vivienda = ifelse(P6600==1,1,0),
#Pago_negocio = P6750/P6760,
Cot_pension = ifelse(P6920==1|P6920==3,1,0),
Rec_subsidio = ifelse(P7510s3==1,1,0),
Ln_Ingtot = log(Ingtot),
Ln_Ingtotob = log(Ingtotob),
Ln_Ing_extra = log(Ing_extra))
test_personas <- test_personas %>%
mutate(
Mujer = ifelse(P6020==2,1,0),
H_Head = ifelse(P6050== 1, 1, 0),#Household head
Afiliado_SS = ifelse(P6090== 1, 1, 0), #Afiliado a seg social en salud
Reg_subs_salud = ifelse(P6100== 3, 1, 0), #Pertenece al regimen de salud subsidiado
Menor = ifelse(P6040<=6,1,0), # Menores
EducLevel = ifelse(P6210==9,0,P6210), #Replace 9 with 0
ocupado = ifelse(is.na(Oc),0,1),
exper_ult_trab = ifelse(is.na(P6426),0,P6426),
Rec_alimento = ifelse(P6590==1,1,0), #Recibio alimentos como parte de pago del salario
Rec_vivienda = ifelse(P6600==1,1,0),
Cot_pension = ifelse(P6920==1|P6920==3,1,0),
Rec_subsidio = ifelse(P7510s3==1,1,0),
Ln_Ingtotob = log(Ingtotob),
Ln_Ing_extra = log(Ing_extra))
test_personas <- test_personas %>%
mutate(
Mujer = ifelse(P6020==2,1,0),
H_Head = ifelse(P6050== 1, 1, 0),#Household head
Afiliado_SS = ifelse(P6090== 1, 1, 0), #Afiliado a seg social en salud
Reg_subs_salud = ifelse(P6100== 3, 1, 0), #Pertenece al regimen de salud subsidiado
Menor = ifelse(P6040<=6,1,0), # Menores
EducLevel = ifelse(P6210==9,0,P6210), #Replace 9 with 0
ocupado = ifelse(is.na(Oc),0,1),
exper_ult_trab = ifelse(is.na(P6426),0,P6426),
Rec_alimento = ifelse(P6590==1,1,0), #Recibio alimentos como parte de pago del salario
Rec_vivienda = ifelse(P6600==1,1,0),
Cot_pension = ifelse(P6920==1|P6920==3,1,0),
Rec_subsidio = ifelse(P7510s3==1,1,0),
Ln_Ing_extra = log(Ing_extra))
test_personas <- test_personas %>%
mutate(
Mujer = ifelse(P6020==2,1,0),
H_Head = ifelse(P6050== 1, 1, 0),#Household head
Afiliado_SS = ifelse(P6090== 1, 1, 0), #Afiliado a seg social en salud
Reg_subs_salud = ifelse(P6100== 3, 1, 0), #Pertenece al regimen de salud subsidiado
Menor = ifelse(P6040<=6,1,0), # Menores
EducLevel = ifelse(P6210==9,0,P6210), #Replace 9 with 0
ocupado = ifelse(is.na(Oc),0,1),
exper_ult_trab = ifelse(is.na(P6426),0,P6426),
Rec_alimento = ifelse(P6590==1,1,0), #Recibio alimentos como parte de pago del salario
Rec_vivienda = ifelse(P6600==1,1,0),
Cot_pension = ifelse(P6920==1|P6920==3,1,0),
Rec_subsidio = ifelse(P7510s3==1,1,0))
train_personas <- train_personas %>%
rename(
Edad = P6040,
Ocupacion = P6430,
Nivel_formalidad = P6870)
colnames(test_personas)
test_personas <- test_personas %>%
rename(
Edad = P6040,
Ocupacion = P6430,
Nivel_formalidad = P6870)
test_personas <- test_personas %>%
select(
id,
Orden,
Clase,
Dominio,
Estrato1,
Edad,
Mujer,
H_Head,#Household head
Afiliado_SS, #Afiliado a seg social en salud
Reg_subs_salud, #Pertenece al regimen de salud subsidiado
Menor, # Menores
Oficio,
Ocupacion,
Nivel_formalidad,
EducLevel, #Replace 9 with 0
ocupado,
exper_ult_trab,
Rec_alimento, #Recibio alimentos como parte de pago del salario
Rec_vivienda,
Cot_pension,
Ing_extra,
Rec_subsidio,
Pet,
Ln_Ingtot,
Ln_Ingtotob,
Ln_Ing_extra,
Fex_c,
Depto,
Fex_dpto)
colnames(test_personas)
test_personas <- test_personas %>%
select(
id,
Orden,
Clase,
Dominio,
Edad,
Mujer,
H_Head,#Household head
Afiliado_SS, #Afiliado a seg social en salud
Reg_subs_salud, #Pertenece al regimen de salud subsidiado
Menor, # Menores
Oficio,
Ocupacion,
Nivel_formalidad,
EducLevel, #Replace 9 with 0
ocupado,
exper_ult_trab,
Rec_alimento, #Recibio alimentos como parte de pago del salario
Rec_vivienda,
Cot_pension,
Ing_extra,
Rec_subsidio,
Pet,
Ln_Ingtot,
Ln_Ingtotob,
Ln_Ing_extra,
Fex_c,
Depto,
Fex_dpto)
test_personas <- test_personas %>%
select(
id,
Orden,
Clase,
Dominio,
Edad,
Mujer,
H_Head,#Household head
Afiliado_SS, #Afiliado a seg social en salud
Reg_subs_salud, #Pertenece al regimen de salud subsidiado
Menor, # Menores
Oficio,
Ocupacion,
Nivel_formalidad,
EducLevel, #Replace 9 with 0
ocupado,
exper_ult_trab,
Rec_alimento, #Recibio alimentos como parte de pago del salario
Rec_vivienda,
Cot_pension,
Rec_subsidio,
Pet,
Ln_Ingtot,
Ln_Ingtotob,
Ln_Ing_extra,
Fex_c,
Depto,
Fex_dpto)
test_personas <- test_personas %>%
select(
id,
Orden,
Clase,
Dominio,
Edad,
Mujer,
H_Head,#Household head
Afiliado_SS, #Afiliado a seg social en salud
Reg_subs_salud, #Pertenece al regimen de salud subsidiado
Menor, # Menores
Oficio,
Ocupacion,
Nivel_formalidad,
EducLevel, #Replace 9 with 0
ocupado,
exper_ult_trab,
Rec_alimento, #Recibio alimentos como parte de pago del salario
Rec_vivienda,
Cot_pension,
Rec_subsidio,
Pet,
Ln_Ingtotob,
Ln_Ing_extra,
Fex_c,
Depto,
Fex_dpto)
test_personas <- test_personas %>%
select(
id,
Orden,
Clase,
Dominio,
Edad,
Mujer,
H_Head,#Household head
Afiliado_SS, #Afiliado a seg social en salud
Reg_subs_salud, #Pertenece al regimen de salud subsidiado
Menor, # Menores
Oficio,
Ocupacion,
Nivel_formalidad,
EducLevel, #Replace 9 with 0
ocupado,
exper_ult_trab,
Rec_alimento, #Recibio alimentos como parte de pago del salario
Rec_vivienda,
Cot_pension,
Rec_subsidio,
Pet,
Ln_Ing_extra,
Fex_c,
Depto,
Fex_dpto)
test_personas <- test_personas %>%
select(
id,
Orden,
Clase,
Dominio,
Edad,
Mujer,
H_Head,#Household head
Afiliado_SS, #Afiliado a seg social en salud
Reg_subs_salud, #Pertenece al regimen de salud subsidiado
Menor, # Menores
Oficio,
Ocupacion,
Nivel_formalidad,
EducLevel, #Replace 9 with 0
ocupado,
exper_ult_trab,
Rec_alimento, #Recibio alimentos como parte de pago del salario
Rec_vivienda,
Cot_pension,
Rec_subsidio,
Pet,
Fex_c,
Depto,
Fex_dpto)
colnames(train_personas)
#### 4. Identificacion de pobres en muestra ----
## Hogares
table(train_hogares$Pobre)
table(train_hogares$Pobre)[2]/nrow(train_hogares)
train_hogares <- train_hogares %>%
mutate(Pobre_ing=ifelse(Ing_tot_hog<Lp*Npersug,1,0))
table(train_hogares$Pobre_ing)
train_personas_nivel_hogar<- train_personas %>%
group_by(id) %>%
summarize(nmujeres=sum(mujer,na.rm=TRUE),
nmenores=sum(menor,na.rm=TRUE),
maxEducLevel=max(EducLevel,na.rm=TRUE),
nocupados=sum(ocupado,na.rm=TRUE)
train_personas_nivel_hogar<- train_personas %>%
train_personas_nivel_hogar<- train_personas %>%
group_by(id) %>%
summarize(nmujeres=sum(mujer,na.rm=TRUE),
nmenores=sum(menor,na.rm=TRUE),
maxEducLevel=max(EducLevel,na.rm=TRUE),
nocupados=sum(ocupado,na.rm=TRUE))
train_personas_nivel_hogar<- train_personas %>%
group_by(id) %>%
summarize(nmujeres=sum(Mujer,na.rm=TRUE),
nmenores=sum(Menor,na.rm=TRUE),
maxEducLevel=max(EducLevel,na.rm=TRUE),
nocupados=sum(ocupado,na.rm=TRUE))
View(train_personas_nivel_hogar)
rm(list = ls())
#se cargan los paquetes
library(pacman)
p_load(rio, # importación/exportación de datos
tidyverse, # datos ordenados (ggplot y Tidyverse)
skimr, # datos de resumen
visdat, # visualización de datos faltantes
corrplot, # gráficos de correlación
stargazer, # tablas/salida a TEX.
rvest, # web-scraping
readxl,
readr, # importar Excel
writexl, # exportar Excel
boot, # bootstrapping
ggpubr, # extensiones de ggplot2
WVPlots, # gráficos de variables ponderadas
patchwork, # para combinar gráficos
gridExtra, # para combinar gráficos
ggplot2, # gráficos
caret, # para evaluación de modelos predictivos
glmnet, # para evaluación de modelos predictivos
data.table, # para manipulación de datos
naniar) # missing
#se define la ruta de trabajo
ifelse(grepl("camilabeltran", getwd()),
wd <- "/Users/camilabeltran/OneDrive/Educación/PEG - Uniandes/BDML/GitHub/problem_set/Problem_set_1",
ifelse(grepl("Juan",getwd()),
wd <- "C:/Users/Juan/Documents/Problem_set_2",
ifelse(grepl("juanp.rodriguez",getwd()),
wd <- "C:/Users/juanp.rodriguez/Documents/GitHub/Problem_set_1",
ifelse(grepl("C:/Users/User",getwd()),
wd <- "C:/Users/User/OneDrive - Universidad de los andes/Big Data y Machine Learning/Problem_set_1/Problem_set_1",
ifelse(grepl("/Users/aleja/",getwd()),
wd <- "/Users/aleja/Documents/Maestría Uniandes/Clases/Big Data y Machine Learning/Repositorios Git Hub/Problem_set_1)",
wd <- "otro_directorio")))))
#Script: "01_web_scraping.R". Realiza el proceso de web scraping para conseguir los datos
setwd(paste0(wd,"/scripts"))
### Importar las bases de entrenamiento
# Personas
train_personas <- read_csv("~/Problem_set_2/Data/train_personas.csv")
save.image("~/Problem_set_2_BDML/scripts_2/train_personas.RData")
### Importar las bases de entrenamiento
# Personas
load(file = train_personas.RData)
### Importar las bases de entrenamiento
# Personas
load(file = "train_personas.RData")
### Importar las bases de entrenamiento
# Personas
load(file = "train_personas.RData")
View(train_personas)
library(randomForest)
install.packages("randomForest")
library(randomForest)
set.seed(1)
bag.boston <- randomForest(medv ~ ., data = Boston,
subset = train, mtry = 12, importance = TRUE)
library(MASS)
set.seed(1)
bag.boston <- randomForest(medv ~ ., data = Boston,
subset = train, mtry = 12, importance = TRUE)
set.seed(1)
train <- sample(1:nrow(Boston), nrow(Boston) / 2)
set.seed(1)
bag.boston <- randomForest(medv ~ ., data = Boston,
subset = train, mtry = 12, importance = TRUE)
View(bag.boston)
View(Boston)
length(Boston)
yhat.bag <- predict(bag.boston, newdata = Boston[-train, ])
plot(yhat.bag, boston.test)
boston.test <- Boston[-train, "medv"]
yhat.bag <- predict(bag.boston, newdata = Boston[-train, ])
plot(yhat.bag, boston.test)
abline(0, 1)
